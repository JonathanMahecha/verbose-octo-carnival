package Dav_TarjetasDeCar;

import java.util.HashMap;
import java.util.Map;

import library.core.BaseTestNG;
import library.data.DataDriven;
import library.reporting.Reporter;
import library.settings.SettingsRun;

public class TarjetasDeCar_Launch extends BaseTestNG {

	TarjetasDeCar_Controller control = new TarjetasDeCar_Controller();

	@Override
	public void launchData() {
		SettingsRun.ARRAY_DATA_PARAMS = new String[] {
			"Cliente 360", "Escenarios As400", "Tipo ID", "Numero ID", "Nombre", "Direccion",
			"Tipo Producto", "Cupo Solicitado", "Oficina Radicación", "Modalidad Credito", "Tipo Garantia",
			"Activar", "Compra", "Monto Compra"
		};
		SettingsRun.DEFAULT_HEADER = 1;
	}

	@Override
	public void initializeControllerAndConfiguration() throws Exception {
		this.setController(control);
	}

	@Override
	public void doingTest() throws Exception {
		validateData();
		control.main();
	}

	public void validateData() throws Exception {
		DataDriven td = SettingsRun.getTestData();

		String[] codes = {
			"ZR", "XN", "XR", "ZT", "5C", "O4", "BA", "BB", "BC", "BJ", "BK", "CF", "F1", "I1", "I5",
			"N9", "P9", "Q1", "Q2", "Q4", "V1", "V3", "L3", "1K", "LA", "BP", "J1", "J2", "BS", "BV", "BW", "DV",
			"AY", "D0", "D1", "BU", "D2", "EM", "EN", "EO", "EP", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9",
			"EQ", "CB", "CC", "ER", "ET", "EV", "CK", "EW", "EX", "EY", "EZ", "CT", "E5", "CX", "CZ", "CG", "BR",
			"BX", "XW", "8D", "8G", "H6", "H7", "PP", "8I", "ME", "E6", "CP", "ZG", "NT", "PT", "3S", "BT", "N2",
			"06", "DL", "OQ", "WH", "7D", "8H", "DH", "HN", "AN8", "HX", "EF", "DN", "GJ", "36", "A1S", "A12", "JK",
			"AKG", "JQ", "6W", "JR", "05", "9A", "LH", "L8", "07", "ANY", "AH4", "AN5", "14", "04", "83", "84",
			"AQ7", "API", "APV", "02"
		};

		String[] keys = {
			"Cliente 360", "Tipo ID", "Numero ID", "Direccion", "Tipo Producto", "Cupo Solicitado",
			"Oficina Radicación", "Modalidad Credito", "Tipo Garantia", "Activar", "Compra", "Monto Compra"
		};

		Map<String, String> params = new HashMap<>();
		for (String key : keys) {
			String value = td.getParameter(key);
			if (value == null || value.trim().isEmpty()) {
				Reporter.reportEvent(Reporter.MIC_NOEXEC,
						"Falta el parámetro '" + key + "' para ejecutar la automatización");
				SettingsRun.exitTestIteration();
				return;
			}
			params.put(key, value);
		}

		String tipoProducto = td.getParameter("Tipo Producto");
		String EscAs400 = td.getParameter("Escenarios As400");
		String numTarjeCred = td.getParameter("Numero de Tarjeta de Credito");

		if (tipoProducto != null) {
			for (String code : codes) {
				if (tipoProducto.contains(code)) {
					Reporter.reportEvent(Reporter.MIC_NOEXEC,
							"El tipo de producto seleccionado está parametrizado e inutilizable, por favor verificar");
					SettingsRun.exitTestIteration();
					return;
				}
			}
		}

		if ((EscAs400.equals("Solo Activar") || EscAs400.equals("Solo Compra")) && numTarjeCred.isEmpty()) {
			Reporter.reportEvent(Reporter.MIC_NOEXEC,
					"Para este escenario de As400 se necesita el numero de una tarjeta de credito");
			SettingsRun.exitTestIteration();
		}
	}
}
