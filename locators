package obligacionesDataCredito;

import dav.c360.PageInicioC360;
import dav.c360.PageLogin;
import library.common.Util;
import library.core.BasePageWeb;
import library.reporting.Reporter;
import library.settings.SettingsRun;
import pages.actions.client360.PageC360;
import pages.actions.client360.PageLoginClient360;
import pages.actions.client360.PagePersonasC360;

public class client360Process extends BasePageWeb {

	PageInicioC360 pageInicio = null;
	PageLogin c360 = null;
	String navegador = BasePageWeb.CHROME;
	LocatorsDataCredit locators;

	public client360Process(String navegador) {
		super(CHROME);
		// TODO Auto-generated constructor stub
	}

	private void client360Procs() throws Exception {
		inicializarClient360();
		ingresoModulos();
		datosBasicos();

		alerta = pageInicio.reporteAlertas();
		if (alerta) {
			Util.wait(2);
			pageInicio.click(LocatorsDataCredit.BTN_CANCELAR_CREACION_USUARIO);
			pageInicio.irAModulo(PageInicioC360.MOD_PAGINA_INICIAL);
			Util.wait(2);
			pageInicio.irAModulo(PageInicioC360.MOD_PERSONAS);
			SettingsRun.exitTestIteration();
		} else {
			if (!pageInicio.isDisplayed(LocatorsDataCredit.LOC_AUX)) {
				pageInicio.irLink(LocatorsDataCredit.LOC_CAMPO_ID);
			}
		}
		if (tipoCliente.contains("Persona Natural")) {
			String msg = null;
			if (pageInicio.existDialog()) {
				msg = pageInicio.getMessageDialog();
				if (msg != null) {
					if (msg.contains(
							"La fecha de expedición debe ser al menos 18 años mayor que la fecha de nacimiento")) {
						Reporter.reportEvent(Reporter.MIC_INFO, msg);
						pageInicio.acceptDialog();
					}
				}
			}

			if (msg == null) {
				pageInicio.irAModulosPrincipales(LocatorsDataCredit.LOC_MAS_INFORMACION);

				pageInicio.setMasInformacion(genero, "SOLTERO", "UNIVERSITARIO", "ADMINISTRACION DE NEGOCIOS",
						"COLOMBIA");
				this.c360.tomarCaptura("Más información");
				Reporter.reportEvent(Reporter.MIC_INFO, "Completado: Más información.");
				pageInicio.irAModulosPrincipales(LocatorsDataCredit.LOC_MAS_DATOS_CONTACTO);
				pageInicio.agregaNuevaDireccion("Persona Natural");
				direccionAleatoria();
				msg = pageInicio.setDireccion(direccionAleatoria(), "CORRESPONDENCIA 1 DEL NEGOCIO", "COLOMBIA",
						"BOGOTA, D.C.", "BOGOTA, D.C.", "BOGOTA, D.C.");
				if (msg != null) {
					Reporter.reportEvent(Reporter.MIC_FAIL, msg);
					SettingsRun.exitTestIteration();

				}

				pageInicio.agregaNuevaDireccion("Persona Natural");
				pageInicio.setDireccion(direccionAleatoria(), "OFICINA CLIENTE", "COLOMBIA", "BOGOTA, D.C.",
						"BOGOTA, D.C.", "BOGOTA, D.C.");
				pageInicio.agregaNuevaDireccion("Persona Natural");
				pageInicio.setDireccion(direccionAleatoria(), "RESIDENCIA CLIENTE", "COLOMBIA", "BOGOTA, D.C.",
						"BOGOTA, D.C.", "BOGOTA, D.C.");
				pageInicio.guardar();
				this.c360.tomarCaptura("Datos de contacto");
				Reporter.reportEvent(Reporter.MIC_INFO, "Completado: Datos de contacto.");
				Util.wait(3);
				pageInicio.irAModulosPrincipales(LocatorsDataCredit.LOC_INFORMACION_FINANCIERA);
				pageInicio.agregarNuevo(LocatorsDataCredit.BTN_AGREGAR_EGRESOS);
				pageInicio.setEgresos("Otros Egresos", "300000", "Descripcion de los EGRESOS ejemplo");
				pageInicio.guardar();

				pageInicio.irAModulosPrincipales(LocatorsDataCredit.LOC_INFORMACION_FINANCIERA);
				pageInicio.agregarNuevo(LocatorsDataCredit.BTN_AGREGAR_INGRESOS);

				pageInicio.setIngresosPersonas("SERVIDOR PUBLICO", "4/06/2018", "2000000", "Salario Mensual",
						"INDEFINIDO",
						"ASALARIADOS: PERSONAS NATURALES Y SUCESIONES ILÍQUIDAS, CUYOS INGRESOS PROVENGAN DE LA RELACIÓN LABORAL, LEGAL O REGLAMENTARIA O QUE TENGAN SU ORIGEN EN ELLA.",
						"54871200", "ABOGADO", "Descripcion para ingresos persona natural", "Automatizacion");
				pageInicio.guardar();

				pageInicio.irAModulosPrincipales(LocatorsDataCredit.LOC_INFORMACION_FINANCIERA);
				pageInicio.agregarNuevo(LocatorsDataCredit.BTN_AGREGAR_PASIVOS);
				pageInicio.setPasivos("Otros Pasivos", "250000", "BANCOS");
				pageInicio.reporteAlertas();
				Util.wait(1);
				pageInicio.irAModulosPrincipales(LocatorsDataCredit.LOC_INFORMACION_FINANCIERA);
				pageInicio.agregarNuevo(LocatorsDataCredit.BTN_AGREGAR_ACTIVOS);
				pageInicio.setActivos("Otros Activos", "9000000", "Descripcion de los activos ejemplo ");
				pageInicio.guardar();
				pageInicio.irAModulosPrincipales(LocatorsDataCredit.LOC_INFORMACION_FINANCIERA);

				this.c360.tomarCaptura("Datos información financiera");
				Reporter.reportEvent(Reporter.MIC_INFO, "Completado: Datos información financiera.");
				pageInicio.guardar();
				Reporter.reportEvent(Reporter.MIC_PASS, "REGISTRO REALIZADO");
			}
		}
		pageInicio.closeAllBrowsers();
	}

	}

	private void inicializarClient360() {
		String id = SettingsRun.getProperty("data.usuario");
		String contraseña = SettingsRun.getProperty("data.clave");
		try {
			if (SettingsRun.esIteracionInicial()) {

				this.c360 = new PageLogin(navegador);
				this.c360.maximizeBrowser();
				this.pageInicio = new PageInicioC360(c360);
				pageInicio.refresh();
				this.c360.login360(id, contraseña);
			}
			do {
				Util.wait(3);
				pageInicio.reporteAlertas();
			} while (pageInicio.element(locators.LOC_BIENVENIDO_MAIN_PAGE) == null);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	private void ingresoModulos() {
		Util.wait(3);
		pageInicio.irAModulo(PageInicioC360.MOD_PERSONAS);
		String existe = pageInicio.buscarExistenciaId(numberId, tipoCliente);
		String textoEstado = pageInicio.extraerTxt();
		SettingsRun.getTestData().setParameter("Estado", textoEstado);
		if (existe != null) {
			Reporter.reportEvent(Reporter.MIC_INFO,
					"Este número de Identificacion ya esta registrado en Cliente 360: " + numberId);
			Util.wait(3);
			pageInicio.irAModulo(PageInicioC360.MOD_PAGINA_INICIAL);
			pageInicio.reporteAlertas();
			return;
		}

		do {
			Util.wait(2);
		} while (pageInicio.element(locators.BTN_AGREGAR_PERSONA) == null);
		pageInicio.agregarNuevo(locators.BTN_AGREGAR_PERSONA);
		Util.wait(1);
	}

	private void datosBasicos() {
		boolean alerta = pageInicio.setDatosBasicosPersonas("CEDULA DE CIUDADANIA", numberId, nombres, primerApellido,
				segundoApellido, fechaNac, fechaExp, "13/01/2024");

		if (alerta) {
			pageInicio.irAModulo(PageInicioC360.MOD_PAGINA_INICIAL);
			Util.wait(2);
			pageInicio.irAModulo(PageInicioC360.MOD_PERSONAS);
			SettingsRun.exitTestIteration();
		} else {
			// Lugar de expedición
			pageInicio.setLugar(typeId, LocatorsDataCredit.ICONO_LUGAR_EXPEDICION,
					LocatorsDataCredit.INPUT_LUGAR_GENERAL, LocatorsDataCredit.INPUT_SITIO_GENERAL, "Ciudad", "BOGOTA",
					LocatorsDataCredit.BTN_ACEPTAR_GENERAL);
			// Lugar de nacimiento
			pageInicio.setLugar(typeId, LocatorsDataCredit.ICONO_LUGAR_NACIMIENTO,
					LocatorsDataCredit.INPUT_LUGAR_GENERAL, LocatorsDataCredit.INPUT_SITIO_GENERAL, "Ciudad", "BOGOTA",
					LocatorsDataCredit.BTN_ACEPTAR_GENERAL);
//			// Teléfono
			pageInicio.setTelefono(tipoCliente, "7306852", "BOGOTA ", "PERSONAL");
//			// Correo electrónico
			pageInicio.setCorreoCelular(LocatorsDataCredit.ICONO_CORREO, LocatorsDataCredit.INPUT_CORREO_UNO,
					LocatorsDataCredit.INPUT_CORREO, "pruebaslabdavi567@gmail.com",
					LocatorsDataCredit.BTN_ACEPTAR_CORREO, LocatorsDataCredit.BTN_NUEVO_CORREO);
//			// Celular
			pageInicio.setCorreoCelular(LocatorsDataCredit.ICONO_CELULAR, LocatorsDataCredit.INPUT_CELULAR_UNO,
					LocatorsDataCredit.INPUT_CELULAR, "3144425014", LocatorsDataCredit.BTN_ACEPTAR_CELULAR,
					LocatorsDataCredit.BTN_NUEVO_CELULAR);
			pageInicio.setSubEstado();
			Util.wait(3);
			Reporter.reportEvent(Reporter.MIC_INFO, "Completado: Datos Básicos.");
			this.c360.tomarCaptura("Datos Básicos");

			pageInicio.irLink(LocatorsDataCredit.LOC_CAMPO_ID);
			Util.wait(5);
			if (pageInicio.existDialog()) {
				pageInicio.getDriver().switchTo().alert().accept();
			}

		}
	}
}
