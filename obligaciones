package dav.as400.tarjeta;

import java.util.List;

import dxc.execution.Reporter;
import dxc.util.DXCUtil;

public class ControllerAprobacionTC {

	ScreenConsulta consultaAs400;

	private String direccionAs400;

//=======================================================================================================================	
	/**
	 * Constructor: se reciben los datos de usuario, clave, perfil del usuario AS400
	 * para el controlador, as� como el ambiente para saber que ese es al que se
	 * referencia.
	 */
	public ControllerAprobacionTC(String user, String password, String perfil, String ambiente) {
		this.consultaAs400 = new ScreenConsulta(user, password, perfil);
	}

//***********************************************************************************************************************
	public String getDireccionAs400() {
		return direccionAs400;
	}

//***********************************************************************************************************************
	public void cerrarConsola() {
		this.consultaAs400.closeAs400();
	}

//***********************************************************************************************************************
	/**
	 * Retorna la oficina de radicaci�n y la direccion de As400
	 */
	public String[] validarAprobacionTCAs400(String tipoDoc, String numDoc, String aliado, String numTarjeta,
			String cupoAprobado, String direccion, String cuentaDebitar) throws Exception {

		/*
		 * 0-tipoDoc, 1-numDoc,2-direccion, 3-estado, 4-cupoGlobal($), 5-OficRad,
		 * 6-IDAgente, 7-Cuenta (n�mero y prefijo), 8-CupoAnterior($), 9-CupoActual($),
		 * 10...novedades (numNov-NombreNov-#opcional)
		 */
		List<String> listaDatos = this.consultaAs400.datosTarjetaCredito(numTarjeta);
		if (listaDatos.size() == 1) { // SI ES DE TAMA�O UNO ES POR QUE CONTIENE EL MENSAJE DE ERROR
			Reporter.reportEvent(Reporter.MIC_FAIL, listaDatos.get(0));
			return new String[] { listaDatos.get(0) }; // RETORNA EL MSJ DE ERROR
		}

		boolean hayError = false;

		// ----------------Validaci�n Tipo de
		// Identificaci�n--------------------------------------------------------------
		if (!listaDatos.get(0).equals(tipoDoc)) {
			hayError = true;
			Reporter.reportEvent(Reporter.MIC_FAIL,
					"EL TIPO DE IDENTIFICACI�N NO CORRESPONDE CON EL USADO EN EL FLUJO: \"" + tipoDoc + "\", EN AS400: "
							+ listaDatos.get(0));
		}
		// ----------------Validaci�n Documento de
		// Identificaci�n---------------------------------------------------------
		if (!listaDatos.get(1).equals(numDoc)) {
			hayError = true;
			Reporter.reportEvent(Reporter.MIC_FAIL,
					"EL N�MERO DE IDENTIFICACI�N NO CORRESPONDE CON EL USADO EN EL FLUJO: " + numDoc + ", EN AS400: "
							+ listaDatos.get(1));
		}
		// ----------------Asignar el valor de la direcci�n del
		// cliente---------------------------------------------------
		String direccionAs400 = listaDatos.get(2);
		if (!direccion.replace("#", "").equals(direccionAs400)) {
			hayError = true;
			Reporter.reportEvent(Reporter.MIC_FAIL, "LA DIRECCION NO COINCIDE , DIRECCI�N ESPERADA: " + "\"" + direccion
					+ "\"" + ", DIRECCI�N MOSTRADA EN AS400" + " \"" + direccionAs400 + "\"");
		}

		// ----------------Validaci�n Estado del
		// Producto----------------------------------------------------------------
		if (!listaDatos.get(3).equals("OD")) {
			hayError = true;
			Reporter.reportEvent(Reporter.MIC_FAIL, "EL ESTADO NO ES EL ESPERADO EN AS400, ESTADO ESPERADO: "
					+ "\"OD\", ESTADO DEL PRODUCTO: \"" + listaDatos.get(3) + "\"");
		}
		// ----------------Validaci�n Cupo Global
		// Asignado----------------------------------------------------------------
		if (!Double.valueOf(listaDatos.get(4)).equals(Double.valueOf(cupoAprobado))) {
			hayError = true;
			Reporter.reportEvent(Reporter.MIC_FAIL, "EL CUPO GLOBAL APROBADO EN EL FLUJO NO COINCIDE,EN AS400: $"
					+ Double.valueOf(listaDatos.get(4)) + ", EN EL FLUJO: $" + Double.valueOf(cupoAprobado));
		}
		// ----------------Asignar el valor de la oficina de radicaci�n a la variable
		// global------------------------------
		String oficinaRad = listaDatos.get(5);
		// ----------------NOVEDADES--------------------------------------------------------------------------------------
		String[] novedades = { "120-", "240-", "280-" };
		String[] nombrNov = { "NOVEDAD 120-BLOQUEO PROVS OFICIN", "NOVEDAD 240", "NOVEDAD 280" };
		boolean[] encontro = { false, false, false };
		int posNovedad;
		// LLENA LA INFORMACI�N DE SI ENCONTR� LAS NOVEDADES BUSCADAS
		for (int i = 10; i < listaDatos.size(); i++) {
			posNovedad = DXCUtil.posItemContainsAnyArrayItem(listaDatos.get(i), novedades);
			if (posNovedad != -1)
				encontro[posNovedad] = true;
		}
		for (int posArr = 0; posArr < encontro.length; posArr++) {
			if (!encontro[posArr]) {
				hayError = true;
				Reporter.reportEvent(Reporter.MIC_FAIL, nombrNov[posArr] + " NO ENCONTRADA");
			}
		}
		// ----------------Validaci�n Cuenta a Debitar en Novedad
		// 240-------------------------------------------------

		if (encontro[1] && !listaDatos.get(7).contains(cuentaDebitar)) {
			hayError = true;
			Reporter.reportEvent(Reporter.MIC_FAIL, "LA CUENTA A DEBITAR DEL FLUJO NO COINCIDE, EN AS400: \""
					+ listaDatos.get(7) + "\", EN EL FLUJO: \"" + DXCUtil.right(cuentaDebitar, 4) + "\"");
		}
		// ----------------Validaci�n Cupo Global Anterior en Novedad
		// 280-------------------------------------------------
		if (encontro[2] && Double.valueOf(listaDatos.get(8)) != 1) {
			hayError = true;
			Reporter.reportEvent(Reporter.MIC_FAIL, "EL 'CUPO GLOBAL ANTERIOR' NO ES 1");
		}
		// ----------------Validaci�n Cupo Global Nuevo en Novedad
		// 280-------------------------------------------------
		if (encontro[2] && !listaDatos.get(9).contentEquals(cupoAprobado)) {
			hayError = true;
			Reporter.reportEvent(Reporter.MIC_FAIL,
					"EL CUPO APROBADO EN EL FLUJO NO COINCIDE CON EL CUPO GLOBAL NUEVO,EN AS400: $" + listaDatos.get(9)
							+ ", EN EL FLUJO: $" + cupoAprobado);
		}
		// ----------------Inicio Validaciones Etapa Actual & Realce
		// Magn�tico--------------------------------------------
		String[] otrosDatos = this.consultaAs400.consultaSolicitud(numTarjeta); // 0-etapaActual, 1-generaPlastico

		if (otrosDatos.length == 1) { // NO ENCONTR� LOS DATOS
			Reporter.reportEvent(Reporter.MIC_FAIL, otrosDatos[0]);
			hayError = true;
		}
		// ----------------Validaci�n Etapa
		// Actual------------------------------------------------------------------------
		if (!otrosDatos[0].equals("09 ENVIO REALCE MAGNETI")) {
			hayError = true;
			Reporter.reportEvent(Reporter.MIC_FAIL, "EL CAMPO 'ETAPA ACTUAL' EN AS400 NO EST� MARCADO COMO "
					+ "'09 ENVIO REALCE MAGNETI'," + " EL CAMPO APARECE: \"" + otrosDatos[0] + "\"");
		}
		// ----------------Validaci�n Env�o Realce
		// Magn�tico--------------------------------------------------------------
		if (!otrosDatos[1].equals("S")) {
			hayError = true;
			Reporter.reportEvent(Reporter.MIC_FAIL, "EL CAMPO 'GENERA PL�STICO' EN AS400 NO EST� MARCADO COMO \"S\""
					+ ", EL CAMPO APARECE COMO: \"" + otrosDatos[1] + "\"");
		}
		if (!hayError) // EN CASO DE NO HABER REPORTES FALLIDOS DURANTE LA VALIDACI�N AS400 REPORTA EL
						// PASS
			Reporter.reportEvent(Reporter.MIC_PASS, "VALIDACIONES EN AS400 SATISFACTORIAS");

		return new String[] { oficinaRad, direccionAs400 };
	}
}
